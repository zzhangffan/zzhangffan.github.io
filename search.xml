<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[UML类图]]></title>
      <url>/2018/01/02/UML-ClassImg/</url>
      <content type="html"><![CDATA[<p>最近在看设计模式的过程中发现用UML类图的地方特别多，学习了之后现在把它记录下来</p>
<h2 id="先上一个最基本的类图示例"><a href="#先上一个最基本的类图示例" class="headerlink" title="先上一个最基本的类图示例"></a>先上一个最基本的类图示例</h2><p><img src="/images/UML-ClassImg/class.png" alt="class"></p>
<blockquote>
<h2 id="类的表示形式"><a href="#类的表示形式" class="headerlink" title="类的表示形式"></a>类的表示形式</h2></blockquote>
<p>在UML类图中，类由一个矩形图案表示，从上到下分别为类名、属性以及方法。</p>
<ol>
<li><p>类名<br><span style="color: red;font-size: 20px;"><br>普通类用 <strong> <code>正体字</code> </strong> 书写 | 接口 a.名称上方加 <code>&lt;&lt; interface &gt;&gt;</code> 表示 b.名称前加 <code>O—</code> | 抽象类用 <strong><em> <code>斜体字</code> </em></strong> 书写</span></p>
</li>
<li><p>属性<br>属性的表示方法如下：<br><font color="blue">&emsp;&emsp;访问级别&emsp;&emsp;属性名&emsp;：&emsp;数据类型&emsp;[ = 缺省值]</font><br>其中访问级别：<br>&emsp;&emsp;— ：私有 private<br>&emsp;&emsp;+ ：公共 public<br>&emsp;&emsp;# ：受保护 protected<br>[ = 缺省值] 为可选项</p>
</li>
<li><p>方法<br>类的方法的表示方法如下：</p>
<font color="blue">&emsp;&emsp;访问级别&emsp;&emsp;名称(参数列表)&emsp;[ ： 返回类型]</font>

</li>
</ol>
<p>[ps]：静态属性和静态方法在上面的基础中加下划线表示</p>
<blockquote>
<h2 id="类与类之间的关系"><a href="#类与类之间的关系" class="headerlink" title="类与类之间的关系"></a>类与类之间的关系</h2></blockquote>
<p>类与类之间关系大致可分为：</p>
<ul>
<li>依赖</li>
<li>关联</li>
<li>聚合</li>
<li>组合</li>
<li>继承</li>
</ul>
<ol>
<li><p>依赖<br>代码表现为：类A的方法中以局部变量、方法参数的形式存在类B的对象或调用类B的静态方法，我们说类A依赖于类B，在UML类图中用虚线箭头表示<br><img src="/images/UML-ClassImg/yilai.png" alt="依赖示意图.png"></p>
</li>
<li><p>关联<br>代码表现为：类A中以成员变量的形式存在类B的对象，get/set赋值，我们说类A与类B是关联的状态，<span style="color:red;">关联关系强调的是平等关系</span>，在UML类图中用实线箭头表示<br><img src="/images/UML-ClassImg/guanlian.png" alt="关联示意图.png"></p>
</li>
<li><p>聚合<br>聚合的代码表现形式与关联一致，构造函数赋值，不好区分，区别在于包含关系的强弱，<span style="color:red;">聚合关系强调的是一方包含另一方，另一方可以单独出去，整体和个体间是可分离的，如燕群和单只燕子</span>，在UML类图中用空心菱形箭头表示<br><img src="/images/UML-ClassImg/juhe.png" alt="聚合示意图.png"></p>
</li>
<li><p>组合<br>组合的代码表现形式与关联和聚合基本一致，<span style="color:red;">组合关系强调的是整体与个体不可分离，如人和大脑，人死了，大脑的生命周期也结束了</span>，组合也成强聚合，在UML类图中用实心菱形箭头表示<br><img src="/images/UML-ClassImg/zuhe.png" alt="组合示意图.png"></p>
</li>
<li><p>继承</p>
</li>
</ol>
<ul>
<li><p>泛化<br>代码中以 <code>extends</code> 关键字体现，用实线三角箭头表示<br><img src="/images/UML-ClassImg/fanhua.png" alt="泛化示意图.png"></p>
</li>
<li><p>实现<br>代码中以 <code>implements</code> 关键字体现，用虚线三角箭头表示<br><img src="/images/UML-ClassImg/shixian.png" alt="实现示意图.png"></p>
</li>
</ul>
<p>（完）</p>
]]></content>
      
        
        <tags>
            
            <tag> UML </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用 Hexo + GitHub Pages 搭建个人博客]]></title>
      <url>/2017/12/31/Use_Hexo-GitHubPages_bulid_personal_blog/</url>
      <content type="html"><![CDATA[<blockquote>
<h2 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h2></blockquote>
<ul>
<li>Node.js（必须）用于支持Hexo，生成静态页面</li>
<li>Git（必须）用于推送本地内容</li>
<li>注册一个GitHib账号（必须）存放文件，服务器</li>
</ul>
<blockquote>
<h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2></blockquote>
<ol>
<li><h2 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a><em>Node.js</em></h2><h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a><em>Windows</em></h1><p><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">官网</a>下载.msi文件到本地，双击安装即可</p>
<h1 id="Linux-CentOS"><a href="#Linux-CentOS" class="headerlink" title="Linux(CentOS)"></a><em>Linux(CentOS)</em></h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install nodejs</span><br></pre></td></tr></table></figure>
</li>
<li><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a><em>Git</em></h2><h1 id="Windows-1"><a href="#Windows-1" class="headerlink" title="Windows"></a><em>Windows</em></h1><p><a href="https://git-scm.com/" target="_blank" rel="noopener">官网</a>下载安装软件包到本地，双击安装即可</p>
<h1 id="Linux-CentOS-1"><a href="#Linux-CentOS-1" class="headerlink" title="Linux(CentOS)"></a><em>Linux(CentOS)</em></h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install git</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>&emsp;&emsp;&emsp;<strong><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">Git教程——廖雪峰</a></strong></p>
<ol>
<li><h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a><em>GitHub</em></h2><p><a href="https://github.com/join?source=header-home" target="_blank" rel="noopener">去注册一个GitHub账号</a></p>
<h3 id="关联Git和GitHub"><a href="#关联Git和GitHub" class="headerlink" title="关联Git和GitHub"></a>关联Git和GitHub</h3><p>生成SSH密匙 输入下面命令后，一路回车即可，<a href="https://github.com/settings/keys" target="_blank" rel="noopener">GitHub 配置SSH Key</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;你的邮箱地址&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><h2 id="创建一个仓库做GitHub-Pages（What-is-GitHub-Pages-）"><a href="#创建一个仓库做GitHub-Pages（What-is-GitHub-Pages-）" class="headerlink" title="创建一个仓库做GitHub Pages（What is GitHub Pages?）"></a><em>创建一个仓库做GitHub Pages（<a href="https://help.github.com/articles/what-is-github-pages/" target="_blank" rel="noopener">What is GitHub Pages?</a>）</em></h2><h2 id="注意点："><a href="#注意点：" class="headerlink" title="注意点："></a>注意点：</h2><p>&emsp;&emsp;<em>1.第一次需要验证邮箱</em><br>&emsp;&emsp;<em>2.仓库名称固定格式为： 你的GitHub用户名.github.io</em></p>
<h3 id="创建成功后，现在可以用你的仓库名称访问你的GitHub-Pages了"><a href="#创建成功后，现在可以用你的仓库名称访问你的GitHub-Pages了" class="headerlink" title="创建成功后，现在可以用你的仓库名称访问你的GitHub Pages了"></a>创建成功后，现在可以用你的仓库名称访问你的GitHub Pages了</h3><p><img src="/images/Use_Hexo-GitHubPages_bulid_personal_blog/call_GitHub-Pages.png" alt="GitHub Pages.png"></p>
</li>
</ol>
<blockquote>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2></blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo</span><br></pre></td></tr></table></figure>
<h3 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo -v</span><br></pre></td></tr></table></figure>
<p><img src="/images/Use_Hexo-GitHubPages_bulid_personal_blog/see_Hexo_version.png" alt="see_Hexo_version.png"></p>
<h3 id="创建一个目录用于存放Hexo相关文件，如：-mkdir-Hexo"><a href="#创建一个目录用于存放Hexo相关文件，如：-mkdir-Hexo" class="headerlink" title="创建一个目录用于存放Hexo相关文件，如： $ mkdir Hexo"></a>创建一个目录用于存放Hexo相关文件，如： <code>$ mkdir Hexo</code></h3><h3 id="使用命令-hexo-init-目录名-或进入目录执行命令-hexo-init"><a href="#使用命令-hexo-init-目录名-或进入目录执行命令-hexo-init" class="headerlink" title="使用命令 hexo init [目录名] 或进入目录执行命令 hexo init"></a>使用命令 <code>hexo init [目录名]</code> 或进入目录执行命令 <code>hexo init</code></h3><p><img src="/images/Use_Hexo-GitHubPages_bulid_personal_blog/command_hexo-init.png" alt="command_hexo-init.png"></p>
<h3 id="Hexo会自动在这个目录下建立需要的文件夹和文件，目录介绍"><a href="#Hexo会自动在这个目录下建立需要的文件夹和文件，目录介绍" class="headerlink" title="Hexo会自动在这个目录下建立需要的文件夹和文件，目录介绍"></a>Hexo会自动在这个目录下建立需要的文件夹和文件，<a href="https://hexo.io/zh-cn/docs/setup.html" target="_blank" rel="noopener">目录介绍</a></h3><p><img src="/images/Use_Hexo-GitHubPages_bulid_personal_blog/hexo-inited_dirStructure.png" alt="hexo-inited_dirStructure.png"></p>
<h3 id="进入目录使用命令-npm-install-安装依赖"><a href="#进入目录使用命令-npm-install-安装依赖" class="headerlink" title="进入目录使用命令 npm install 安装依赖"></a>进入目录使用命令 <code>npm install</code> 安装依赖</h3><p><img src="/images/Use_Hexo-GitHubPages_bulid_personal_blog/command_npm-install.png" alt="command_npm-install.png"></p>
<blockquote>
<h2 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h2></blockquote>
<h3 id="生成静态页面和资源文件"><a href="#生成静态页面和资源文件" class="headerlink" title="生成静态页面和资源文件"></a>生成静态页面和资源文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate	简写：hexo g</span><br></pre></td></tr></table></figure>
<h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server 简写：hexo s</span><br></pre></td></tr></table></figure>
<h3 id="命令可以组合使用，如-hexo-s-g-更多命令查看Hexo文档"><a href="#命令可以组合使用，如-hexo-s-g-更多命令查看Hexo文档" class="headerlink" title="命令可以组合使用，如 $ hexo s -g 更多命令查看Hexo文档"></a>命令可以组合使用，如 <code>$ hexo s -g</code> <a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">更多命令查看Hexo文档</a></h3><h3 id="现在你可以通过-http-localhost-4000-进行访问了"><a href="#现在你可以通过-http-localhost-4000-进行访问了" class="headerlink" title="现在你可以通过 http://localhost:4000/ 进行访问了"></a>现在你可以通过 <code>http://localhost:4000/</code> 进行访问了</h3><p><img src="/images/Use_Hexo-GitHubPages_bulid_personal_blog/Hexo_index.png" alt="Hexo_index.png"></p>
<blockquote>
<h2 id="部署至GitHub"><a href="#部署至GitHub" class="headerlink" title="部署至GitHub"></a>部署至GitHub</h2></blockquote>
<p>修改Hexo根目录下的 <code>_config.yml</code> 主站配置文件中的 <code>deploy</code> 参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line"> 	  type: git</span><br><span class="line"> 	  repo: &lt;仓库地址&gt;</span><br><span class="line"> 	  branch: [分支名称]</span><br><span class="line"> 	  message: [提交信息]</span><br></pre></td></tr></table></figure></p>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy 简写： hexo d</span><br></pre></td></tr></table></figure>
<p><img src="/images/Use_Hexo-GitHubPages_bulid_personal_blog/command_hexo-d.png" alt="command_hexo-d.png"></p>
<blockquote>
<h3 id="部署提示找不到：git"><a href="#部署提示找不到：git" class="headerlink" title="部署提示找不到：git"></a>部署提示找不到：git</h3><blockquote>
<p>3.0 后 type需改为 git ，deploy部分被单独出来了，需要单独安装</p>
</blockquote>
</blockquote>
<h2 id="安装-hexo-deployer-git"><a href="#安装-hexo-deployer-git" class="headerlink" title="安装 hexo-deployer-git"></a>安装 hexo-deployer-git</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<h2 id="再-hexo-d-，部署成功后快用你的GitHub-Pages仓库名称访问你的博客吧"><a href="#再-hexo-d-，部署成功后快用你的GitHub-Pages仓库名称访问你的博客吧" class="headerlink" title="再 hexo d ，部署成功后快用你的GitHub Pages仓库名称访问你的博客吧~"></a>再 <code>hexo d</code> ，部署成功后快用你的GitHub Pages仓库名称访问你的博客吧~</h2><p><img src="/images/Use_Hexo-GitHubPages_bulid_personal_blog/GitHub-Pages_index.png" alt="GitHub-Pages_index.png"></p>
<h1 id="（完）"><a href="#（完）" class="headerlink" title="（完）"></a>（完）</h1>]]></content>
      
        <categories>
            
            <category> Hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
